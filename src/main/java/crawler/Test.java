package crawler;

import html.*;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;

public class Test {

    public static void main(String[] args) {
        Crawler c = new Crawler();
        c.init();

//String[] manually = {"CVE-2018-1376","CVE-2018-13784","CVE-2018-13863","CVE-2018-13864",
//        "CVE-2018-1389","CVE-2018-13980","CVE-2018-13988","CVE-2018-13998",
//        "CVE-2018-14010","CVE-2018-14023","CVE-2018-8024"};
        List<String> cves =  readTxtFileIntoStringArrList("/Users/yueguo/github/VulnerabilitySearch/cve.txt");

String[] siteList = {
        "cxsecurity.com",
        "security-tracker.debian.org",
        "www.akaoma.com",
        "twitter.com",
        "vulners.com",
        "www.cvedetails.com",
        "cve.mitre.org",
        "nvd.nist.gov"};

        //nvd.nist.gov
        NVDAnalyzer nvdAnalyzer = new NVDAnalyzer();
        //cve.mitre.org
        CVEAnalyzer cveAnalyzer = new CVEAnalyzer();
        //www.cvedetails.com
        CVEDetailAnalyzer cveDetailAnalyzer = new CVEDetailAnalyzer();
        //vulners.com
        VulnersAnalyzer vulnersAnalyzer = new VulnersAnalyzer();
        //twitter.com
        TwitterAnalyzer twitterAnalyzer = new TwitterAnalyzer();
        //XforceAnalyzer xforceAnalyzer = new XforceAnalyzer();
        //www.akaoma.com
        AkaomaAnalyzer akaomaAnalyzer = new AkaomaAnalyzer();
        //security-tracker.debian.org
        SecurityAnalyzer securityAnalyzer = new SecurityAnalyzer();
        //cxsecurity.com
        CXSecurityAnalyzer cxSecurityAnalyzer = new CXSecurityAnalyzer();
        for (int j = 0; j< cves.size(); j++){
            String searchWord = cves.get(j);
            System.out.println(searchWord);
            for (int i = siteList.length - 1; i >= 0; i--) {

                List<String> ll = c.getGoogleRes("site:" + siteList[i] +" "+ searchWord);
                if ( ll.size() == 0) continue;
                if (ll.get(0).contains(searchWord)) {
                    List<String> result= new ArrayList<>();
                    if ( siteList[i].equals("nvd.nist.gov")) {
                        result= nvdAnalyzer.getAllVersion(c.crawlPage(ll.get(0)),searchWord);
                    }else if (siteList[i].equals("cve.mitre.org")){
                        result= cveAnalyzer.getAllVersion(c.crawlPage(ll.get(0)),searchWord);
                    }else if (siteList[i].equals("www.cvedetails.com")){
                        result= cveDetailAnalyzer.getAllVersion(c.crawlPage(ll.get(0)),searchWord);
                    }else if (siteList[i].equals("twitter.com")){
                        result= twitterAnalyzer.getAllVersion(c.crawlPage(ll.get(0)),searchWord);
                    }else if (siteList[i].equals("www.akaoma.com")){
                        result= akaomaAnalyzer.getAllVersion(c.crawlPage(ll.get(0)),searchWord);
                    }else if (siteList[i].equals("security-tracker.debian.org")) {
                        result = securityAnalyzer.getAllVersion(c.crawlPage(ll.get(0)), searchWord);
                    }else if (siteList[i].equals("cxsecurity.com")){
                        result= cxSecurityAnalyzer.getAllVersion(c.crawlPage(ll.get(0)),searchWord);
                    }
                    for (String s: result) {
                        System.out.println(s);
                    }
                }
            }
            System.out.println("------------------------------------------------------");
        }



//        for(int i  = siteList.length - 1; i >= 0; i--) {
//            List<String> list = c.getGoogleRes("site:" +siteList[i] +" "+ searchWord);
//            HtmlAnalyze htmlAnalyze = new HtmlAnalyze();
//            List<String> result= htmlAnalyze.getAllVersion(c.crawlPage(list.get(0)),searchWord);
//            for (String s: result) {
//                System.out.println(s);
//            }
//            System.out.println("------------------------------");
//        }
        c.close();
    }
    /**
     * 功能：Java读取txt文件的内容 步骤：1：先获得文件句柄 2：获得文件句柄当做是输入一个字节码流，需要对这个输入流进行读取
     * 3：读取到输入流后，需要读取生成字节流 4：一行一行的输出。readline()。 备注：需要考虑的是异常情况
     *
     * @param filePath
     *
     * @return
     */
    public static List<String> readTxtFileIntoStringArrList(String filePath)
    {
        List<String> list = new ArrayList<String>();
        try
        {
            String encoding = "GBK";
            File file = new File(filePath);
            if (file.isFile() && file.exists())
            {
                InputStreamReader read = new InputStreamReader(
                        new FileInputStream(file), encoding);
                BufferedReader bufferedReader = new BufferedReader(read);
                String lineTxt = null;

                while ((lineTxt = bufferedReader.readLine()) != null)
                {
                    list.add(lineTxt);
                }
                bufferedReader.close();
                read.close();
            }
            else
            {
                System.out.println("cannot find file");
            }
        }
        catch (Exception e)
        {
            System.out.println("Error");
            e.printStackTrace();
        }

        return list;
    }
}
