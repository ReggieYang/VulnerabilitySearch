package crawler;

import com.gargoylesoftware.htmlunit.WebClient;
import com.gargoylesoftware.htmlunit.html.HtmlAnchor;
import com.gargoylesoftware.htmlunit.html.HtmlPage;
import org.apache.http.NameValuePair;
import org.apache.http.client.utils.URLEncodedUtils;

import java.io.IOException;
import java.net.*;
import java.nio.charset.Charset;
import java.util.*;


public class Crawler {
    WebClient webClient;

    public void init() {
//        LogFactory.getFactory.setAttribute("org.apache.commons.logging.Log", "org.apache.commons.logging.impl.NoOpLog");
//        java.util.logging.Logger.getLogger("com.gargoylesoftware").setLevel(Level.OFF);
//        java.util.logging.Logger.getLogger("org.apache.commons.httpclient").setLevel(Level.OFF)
        webClient = new WebClient();
        webClient.getOptions().setCssEnabled(false);
        webClient.getOptions().setJavaScriptEnabled(false);
    }

    public void close() {
        webClient.close();
    }

    public List<String> getGoogleRes(String kw) {
        kw = kw.replaceAll(" ", "+");
        String url = String.format("https://www.google.com/search?q=%s&lr=lang_en", kw);
        try {
            HtmlPage page = webClient.getPage(url);
            List<String> list = new ArrayList<>();
            for (Object o : page.getBody().getByXPath("//div[@class='g']//h3[@class='r']//a")) {
                HtmlAnchor ha = (HtmlAnchor) o;
                String resURL = ha.getHrefAttribute();
                if (resURL.startsWith("/url")) list.add(getURLfromGoogleRes(resURL));
            }
            return list;

        } catch (IOException e) {
            e.printStackTrace();
        }
        return null;
    }

    public String crawlPage(String url) {
        try {
            HtmlPage page = webClient.getPage(url);
            if (page == null || page.getBody() == null || page.getBody().asText() == null) return null;
            else return page.getBody().asText();
        } catch (Exception e) {
            webClient.close();
            init();
            e.printStackTrace();
        }

        return null;
    }

    public String getURLfromGoogleRes(String url) {
        List<NameValuePair> params = null;
        try {
            params = URLEncodedUtils.parse(new URI(url), Charset.forName("UTF-8"));
            for (NameValuePair param : params) {
                if (param.getName().equals("q")) return param.getValue();
            }
        } catch (URISyntaxException e) {
            e.printStackTrace();
        }

        return null;
    }
}
